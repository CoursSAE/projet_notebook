"""
üìù **Instructions** :
- Installez toutes les biblioth√®ques n√©cessaires en fonction des imports pr√©sents dans le code, utilisez la commande suivante :conda create -n projet python pandas numpy ..........
- Compl√©tez les sections en √©crivant votre code o√π c‚Äôest indiqu√©.
- Ajoutez des commentaires clairs pour expliquer vos choix.
- Utilisez des emoji avec windows + ;
- Interpr√©tez les r√©sultats de vos visualisations (quelques phrases).
"""

### 1. Importation des librairies et chargement des donn√©es
import os
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px

# Chargement des donn√©es √† partir du fichier csv Kaggle
df = pd.read_csv("ds_salaries.csv")


### 2. Exploration visuelle des donn√©es
# Affiche le titre
st.title("üìä Visualisation des Salaires en Data Science")

# Affiche le texte d'introduction
st.markdown("Explorez les tendances des salaires √† travers diff√©rentes visualisations interactives.")

# Affiche les 5 premi√®res lignes du jeu de donn√©es si la case est coch√©e.
if st.checkbox("Afficher un aper√ßu des donn√©es"):
    st.write(df.head())


#Statistique g√©n√©rales avec describe pandas  
st.subheader("üìå Statistiques g√©n√©rales")
st.write(df.describe())

# Interpr√©tation des r√©sultats
st.markdown("Le tableau pr√©sente les statistiques g√©n√©rales des variables num√©riques, offrant un aper√ßu de la r√©partition des salaires, du travail √† distance et des ann√©es de travail. L‚Äô√©chantillon contient 3 755 observations, avec une moyenne de salaire locale de 190 695 et une moyenne de 137 570 USD, bien que l‚Äô√©cart-type √©lev√© indique une forte dispersion des salaires. Les salaires varient de 6 000 √† 30,4 millions dans la devise locale et de 5 132 √† 450 000 USD, ce qui met en √©vidence des disparit√©s importantes. La m√©diane des salaires est de 138 000 en monnaie locale et 135 000 USD, sugg√©rant que la plupart des salaires sont inf√©rieurs √† la moyenne en raison de valeurs extr√™mes √©lev√©es. Concernant le t√©l√©travail (remote_ratio), la m√©diane est de 0, indiquant que la majorit√© des emplois sont en pr√©sentiel, bien que 25 % des emplois offrent un ratio de t√©l√©travail de 100 %. L‚Äôann√©e de travail s‚Äô√©tend de 2020 √† 2023, avec une moyenne autour de 2022, refl√©tant des donn√©es r√©centes.")


### 3. Distribution des salairespar r√¥le et niveau d'exp√©rience, uilisant px.box et st.plotly_chart
st.subheader("üìà Distribution des salaires")

# Cr√©ation d'un boxplot pour visualiser la distribution des salaires
fig = px.box(df, x='experience_level', y='salary') 
st.plotly_chart(fig)

# Interpr√©tation des r√©sultats
st.markdown("Le graphique montre la distribution des salaires en fonction du niveau d'exp√©rience, r√©v√©lant une forte variabilit√© selon les cat√©gories. Les niveaux Mid-Level (MI) affichent des pics de r√©mun√©ration plus √©lev√©s que les autres, avec des valeurs extr√™mes, tandis que Senior (SE) et Entry-Level (EN) ont des salaires plus concentr√©s. On observe √©galement des outliers marqu√©s, notamment au niveau MI, sugg√©rant que certains postes comme Data Science Manager ou Machine Learning Engineer peuvent atteindre des r√©mun√©rations exceptionnelles. La progression des salaires n‚Äôest pas strictement lin√©aire : certains niveaux b√©n√©ficient d‚Äôune hausse significative avant de stagner ou de diminuer aux niveaux sup√©rieurs, ce qui indique que certaines fonctions sont mieux r√©mun√©r√©es √† un stade interm√©diaire de carri√®re, alors que d‚Äôautres suivent une √©volution plus stable.")


### 4. Analyse des tendances de salaires :
#### Salaire moyen par cat√©gorie : en choisisant une des : ['experience_level', 'employment_type', 'job_title', 'company_location'], utilisant px.bar et st.selectbox 
st.subheader("üìä Salaire moyen par cat√©gorie")

# S√©lection de la cat√©gorie pour l'analyse du salaire moyen
selection = st.selectbox('Choisir une cat√©gorie', options=['experience_level', 'employment_type', 'job_title', 'company_location'])

# Calcul du salaire moyen par la cat√©gorie s√©lectionn√©e
salaire_moyen = df.groupby(selection)['salary'].mean().reset_index()

# Cr√©ation d'un graphique √† barres
fig_bar = px.bar(salaire_moyen, x=selection, y='salary', title=f"Salaire moyen par {selection}")
st.plotly_chart(fig_bar)

# Interpr√©tation des r√©sultats
st.markdown("Les graphiques montrent que la r√©mun√©ration varie fortement selon l'exp√©rience, le type d'emploi, l'intitul√© du poste et la localisation de l'entreprise. Les Mid-Level (MI) et Executive (EX) ont les salaires moyens les plus √©lev√©s, tandis que les Senior (SE) gagnent moins en moyenne. Les Freelancers (FL) sont les mieux r√©mun√©r√©s, d√©passant 300k, alors que les Part-Time (PT) ont les salaires les plus bas. Certains postes comme Head of Machine Learning ou Financial Data Analyst atteignent plusieurs millions, tandis que d‚Äôautres, comme Data Analyst ou Software Engineer, ont une r√©mun√©ration plus stable. La localisation joue un r√¥le cl√© : la Suisse (CH) offre les salaires les plus √©lev√©s (jusqu'√† 30M), suivie des √âtats-Unis (US) et d‚Äôautres pays √† forte demande en expertise. Ces tendances montrent que les opportunit√©s financi√®res d√©pendent fortement du march√©, de la sp√©cialisation et du niveau d‚Äôexp√©rience.")


### 5. Corr√©lation entre variables
st.subheader("üîó Corr√©lations entre variables num√©riques")

# S√©lectionner uniquement les colonnes num√©riques pour la corr√©lation
numeric_df = df.select_dtypes(include=[np.number])

# Calcul de la matrice de corr√©lation
correlation_matrix = numeric_df.corr()

# Affichage du heatmap avec sns.heatmap
fig, ax = plt.subplots(figsize=(10, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', ax=ax)
st.pyplot(fig)

# Interpr√©tation des r√©sultats
st.markdown("Le graphique repr√©sente la matrice de corr√©lation entre diff√©rentes variables num√©riques, indiquant la force et la direction des relations entre elles. On observe que l'ann√©e de travail (work_year) est positivement corr√©l√©e (+0.23) avec le salaire en USD, ce qui sugg√®re une l√©g√®re augmentation des salaires au fil du temps, tandis qu'elle est n√©gativement corr√©l√©e (-0.24) avec le ratio de travail √† distance, indiquant une diminution du t√©l√©travail avec les ann√©es. Le salaire en devise locale et en USD sont faiblement li√©s (-0.024), ce qui pourrait refl√©ter des fluctuations mon√©taires ou des diff√©rences dans la conversion. Enfin, le ratio de t√©l√©travail a une tr√®s faible corr√©lation avec le salaire (+0.029), sugg√©rant que le travail √† distance n‚Äôinfluence pas significativement la r√©mun√©ration.")


### 6. Analyse interactive des variations de salaire
# Une √©volution des salaires pour les 10 postes les plus courants
# count of job titles pour selectionner les postes
# calcule du salaire moyen par an
# utilisez px.line
st.subheader("üìà √âvolution des salaires pour les 10 postes les plus courants")

# S√©lection des 10 postes les plus fr√©quents
job_10 = df['job_title'].value_counts().nlargest(10).index
df_job_10 = df[df['job_title'].isin(job_10)]

# Calcul du salaire moyen en fonction du niveau d'exp√©rience
salaire_moyen_an = df_job_10.groupby(['job_title', 'experience_level'])['salary'].mean().reset_index()

# Cr√©ation d'un graphique en ligne
fig_line = px.line(salaire_moyen_an, x='experience_level', y='salary', color='job_title', title="Salaire moyen par exp√©rience")
st.plotly_chart(fig_line)

# Interpr√©tation des r√©sultats
st.markdown("Le graphique montre l'√©volution des salaires moyens pour les 10 postes les plus courants en fonction du niveau d'exp√©rience. On observe que certains postes, comme Data Science Manager et Data Scientist, affichent des variations importantes, avec des pics de r√©mun√©ration pour les niveaux interm√©diaires (MI) avant de redescendre pour les seniors (SE). √Ä l‚Äôinverse, des postes comme Applied Scientist ou Machine Learning Engineer connaissent une progression plus stable avec l'exp√©rience. Cette tendance sugg√®re que certaines fonctions offrent des opportunit√©s financi√®res plus √©lev√©es √† un moment donn√© de la carri√®re, tandis que d‚Äôautres b√©n√©ficient d‚Äôune croissance salariale plus lin√©aire.")


### 7. Salaire m√©dian par exp√©rience et taille d'entreprise
# utilisez median(), px.bar
st.subheader("üìä Salaire m√©dian par exp√©rience et taille d'entreprise")

# Calcul du salaire m√©dian selon l'exp√©rience et la taille de l'entreprise
salaire_median = df.groupby(['experience_level', 'company_size'])['salary'].median().reset_index()

# Cr√©ation d'un graphique √† barres
fig_median = px.bar(salaire_median, x='experience_level', y='salary', color='company_size', barmode='group', title="Salaire m√©dian par exp√©rience et taille d'entreprise")
st.plotly_chart(fig_median)

# Interpr√©tation des r√©sultats
st.markdown("Le graphique montre que le salaire m√©dian augmente avec l'exp√©rience, les employ√©s exp√©riment√©s (EX) et seniors (SE) gagnant significativement plus que les d√©butants (EN) et interm√©diaires (MI). On observe √©galement que la taille de l'entreprise influence les salaires : les grandes entreprises (L) offrent les r√©mun√©rations les plus √©lev√©es, suivies des moyennes (M), tandis que les petites entreprises (S) proposent les salaires les plus bas, quel que soit le niveau d'exp√©rience. Cette tendance souligne l'importance de l'exp√©rience et de la structure de l'entreprise dans la r√©mun√©ration des employ√©s.")


### 8. Ajout de filtres dynamiques
#Filtrer les donn√©es par salaire utilisant st.slider pour selectionner les plages  
st.subheader("üéöÔ∏è Filtrer les donn√©es par salaire")

# S√©lection d'une plage de salaires avec un slider
min_salaire, max_salaire = int(df['salary'].min()), int(df['salary'].max())
plage_salaire = st.slider("S√©lectionnez une plage de salaire", min_value=min_salaire, max_value=max_salaire, value=(min_salaire, max_salaire))

# Filtrage des donn√©es en fonction de la plage de salaires s√©lectionn√©e
df_filtre = df[(df['salary'] >= plage_salaire[0]) & (df['salary'] <= plage_salaire[1])]
st.write(df_filtre)


### 9.  Impact du t√©l√©travail sur le salaire selon le pays
st.subheader("üè† Impact du t√©l√©travail sur le salaire selon le pays")

# Calcul du salaire moyen en fonction du t√©l√©travail et de la localisation
remote_salary = df.groupby(['remote_ratio', 'company_location'])['salary'].mean().reset_index()

# Cr√©ation d'un graphique √† barres
fig_remote = px.bar(remote_salary, x='company_location', y='salary', color='remote_ratio', barmode='group', title="Impact du t√©l√©travail sur le salaire")
st.plotly_chart(fig_remote)

# Interpr√©tation des r√©sultats
st.markdown("")


### 10. Filtrage avanc√© des donn√©es avec deux st.multiselect, un qui indique "S√©lectionnez le niveau d'exp√©rience" et l'autre "S√©lectionnez la taille d'entreprise"
st.subheader("üîç Filtrage avanc√© des donn√©es")

# Cr√©ation des filtres pour le niveau d'exp√©rience et la taille d'entreprise
select_exp = st.multiselect("S√©lectionnez le niveau d'exp√©rience", options=df['experience_level'].unique())
select_taille = st.multiselect("S√©lectionnez la taille d'entreprise", options=df['company_size'].unique())

df_filtre = df.copy()

# Utilisation des filtres
if select_exp:
    df_filtre = df_filtre[df_filtre['experience_level'].isin(select_exp)]
if select_taille:
    df_filtre = df_filtre[df_filtre['company_size'].isin(select_taille)]
st.write(df_filtre)
